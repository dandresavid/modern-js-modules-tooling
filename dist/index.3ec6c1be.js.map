{"mappings":"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","sources":["clean.js"],"sourcesContent":["'strict mode'\n\nconst budget = Object.freeze ([\n  { value: 250, description: 'Sold old TV 📺', user: 'jonas' },\n  { value: -45, description: 'Groceries 🥑', user: 'jonas' },\n  { value: 3500, description: 'Monthly salary 👩‍💻', user: 'jonas' },\n  { value: 300, description: 'Freelancing 👩‍💻', user: 'jonas' },\n  { value: -1100, description: 'New iPhone 📱', user: 'jonas' },\n  { value: -20, description: 'Candy 🍭', user: 'matilda' },\n  { value: -125, description: 'Toys 🚂', user: 'matilda' },\n  { value: -1800, description: 'New Laptop 💻', user: 'jonas' },\n]);\n\nconst spendingLimits = Object.freeze ({ \n  jonas: 1500,\n  matilda: 100,\n});\n//spendingLimits.jay = 200;\n\nconst getLimit = (limits, user) => limits?.[user] ?? 0;\n//const limit = spendingLimits[user] ? spendingLimits[user] : 0;\n\n//Pure function\nconst addExpense = function (state, limits, value, description, user = 'jonas' ) {\n  const cleanUser = user.toLowerCase();\n  return value <= getLimit(limits, cleanUser)? \n    [...state, { value: -value, description, user: cleanUser }]: state;\n   //budget.push({ value: -value, description, user: cleanUser });\n};\nconst newBudget1 = addExpense(budget, spendingLimits, 10, 'Pizza 🍕');\nconst newBudget2 = addExpense(newBudget1, spendingLimits, 100, 'Going to movies 🍿', 'Matilda');\nconst newBudget3 = addExpense(newBudget2, spendingLimits, 200, 'Stuff', 'Jay');\n\n// const checkExpenses = function (state, limits) {\n//   return state.map(entry => {\n//     return entry.value < -getLimit(limits, entry.user)? {...entry, flag: 'limit'} : entry;\n//   })\n//   // for (var entry of budget) \n//   //   if (entry.value < -getLimit(limits, entry.user)) \n//   //     entry.flag = 'limit';\n// };\n\nconst checkExpenses = (state, limits) =>\n  state.map(entry => \n     entry.value < -getLimit(limits, entry.user)? \n     {...entry, flag: 'limit'} : entry )\n\n\nconst finalBudget = checkExpenses( newBudget3, spendingLimits);\nconsole.log(finalBudget); // --->  impure\n\n\n//Impure\nconst logBigExpenses = function (state,bigLimit) {\n  const bigExpenses = state\n  .filter(entry => output = entry.value <= -bigLimit)\n  .map(entry => entry.description.slice(-2))\n  .join(' / ');\n  //.reduce((str,cur) => `${str} / ${cur.description.slice(-2)}`, '')\n\n  console.log(bigExpenses)\n\n  // let output = '';\n  // for (const entry of budget) \n  //   output = entry.value <= -bigLimit? `${entry.description.slice(-2)} / ` : '';\n\n  // output = output.slice(0, -2); // Remove last '/ '\n  // console.log(output);\n};\n\nlogBigExpenses(finalBudget, 500);\n"],"names":[],"version":3,"file":"index.3ec6c1be.js.map","sourceRoot":"/__parcel_source_root/"}